<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PanelSW.Installer.JetBA</name>
    </assembly>
    <members>
        <member name="T:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData">
            <summary>
            WiX bootstrapper manifest
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.ParseBootstrapperApplicationData``1">
            <summary>
            Helper method to deserialize BootstrapperApplicationData.xml
            Used by <see cref="M:PanelSW.Installer.JetBA.NInjectBinder.Load"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.#ctor">
            <summary>
            C'tor
            Do not use. Instead, use <see cref="P:PanelSW.Installer.JetBA.JetBootstrapperApplication.Kernel"/> to get an instance.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.JetBaSettings">
            <summary>
            JetBA License
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.EncryptVariables">
            <summary>
            JetBA encrypted variables
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.BundleSearches">
            <summary>
            BundleSearch rows
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.BundleAttributes">
            <summary>
            General attributes of this Bundle
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.Packages">
            <summary>
            Package collection
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.Payloads">
            <summary>
            Payload collection
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.FeatureInfo">
            <summary>
            MSI features per package.
            This is only available for packages that have their EnableFeatureSelection attribute set to "yes".
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.Conditions">
            <summary>
            Bundle launch conditions
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData.OverridableVariables">
            <summary>
            Bundle collection of variables that can be overridden from command line
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Manifest.BundleAttributes">
            <summary>
            Bundle attributes
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BundleAttributes.DisplayName">
            <summary>
            Bundle display name
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BundleAttributes.LogPathVariable">
            <summary>
            Bundle log path variable
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BundleAttributes.Compressed">
            <summary>
            Whether or not this bundle is compressed. 'yes' or 'no'
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BundleAttributes.Id">
            <summary>
            Bundle Id, Analogous to MSI packages' ProductCode property 
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BundleAttributes.UpgradeCode">
            <summary>
            Bundle UpgradeCode
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.BundleAttributes.PerMachine">
            <summary>
            Whether or not this bundle is in machine context. 'yes' or 'no'
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Manifest.JetBaEncryptVariable">
            <summary>
            Variable encrypted by JetBA
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.JetBaEncryptVariable.Variable">
            <summary>
            Variable name
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Manifest.JetBaSettings">
            <summary>
            JetBA License
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.JetBaSettings.LicenseXml">
            <summary>
            JetBA License text
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Manifest.JetBundleSearch">
            <summary>
            BundleSearch row
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.JetBundleSearch.UpgradeCode">
            <summary>
            Bundle UpgradeCode to search for
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.JetBundleSearch.VersionVariable">
            <summary>
            Name of a variable to receive the bundle version. If no matching bundle is detected, variable value will be 0.0.0.0
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.JetBundleSearch.NamePattern">
            <summary>
            Optional regex pattern to filter bundles sharing the same UpgradeCode
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Manifest.JetBundleSearch.#ctor">
            <summary>
            C'tor
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo">
            <summary>
            Feature information for a MSI package
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Package">
            <summary>
            Package this feature belongs to
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Feature">
            <summary>
            Feature ID
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Parent">
            <summary>
            Parent feature ID
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Title">
            <summary>
            Feature title
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Description">
            <summary>
            Feature description
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Directory">
            <summary>
            Feature directory
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Attributes">
            <summary>
            Feature attributes
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Level">
            <summary>
            Feature default level
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Display">
            <summary>
            Feature display level
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.Size">
            <summary>
            Feature total component size
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.DetectState">
            <summary>
            Detect state of the feature. Set on DetectMsiFeature event.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageFeatureInfo.PlanState">
            <summary>
            Plan state of the feature. Set on PlanMsiFeature event.
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Manifest.WixPackageProperties">
            <summary>
            Bundle attributes a Package
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.Id">
            <summary>
            Package ID
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.DisplayName">
            <summary>
            Package display name
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.Description">
            <summary>
            Package description
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.Vital">
            <summary>
            Whether or not this package is vital. 'yes' or 'no'
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.DownloadSize">
            <summary>
            Download size of the package
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.PackageSize">
            <summary>
            Package size
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.InstalledSize">
            <summary>
            Package size when installed
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.PackageType">
            <summary>
            Package type. Exe, Msi, Msp, or Msu.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.Permanent">
            <summary>
            Whether or not this package is permannet. 'yes' or 'no'
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.LogPathVariable">
            <summary>
            Package log path variable
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.RollbackLogPathVariable">
            <summary>
            Package log path variable during rollback
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.Compressed">
            <summary>
            Whether or not this package is compressed. 'yes' or 'no'
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.DisplayInternalUI">
            <summary>
            Whether or not internal UI for this package will be displayed
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.DetectState">
            <summary>
            Detect state of the package. Set on DetectPackageComplete event
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.PlanState">
            <summary>
            Plan state for the package. Set on PlanPackageComplete event
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPackageProperties.RollbackState">
            <summary>
            Plan state for the package rollback. Set on PlanPackageComplete event
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Manifest.WixPayloadProperties">
            <summary>
            Payload information
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPayloadProperties.Id">
            <summary>
            Payload ID
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPayloadProperties.PackageId">
            <summary>
            The package this payload belongs to
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPayloadProperties.Name">
            <summary>
            Payload name
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPayloadProperties.Size">
            <summary>
            Payload size
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPayloadProperties.DownloadUrl">
            <summary>
            Payload URL
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixPayloadProperties.LayoutOnly">
            <summary>
            Whether or not this payload is for layout only
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Manifest.WixBalCondition">
            <summary>
            Bundle launch condition
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixBalCondition.Condition">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixBalCondition.Message">
            <summary>
            Message to display should the condition evaluate to false
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Manifest.WixStdbaOverridableVariable">
            <summary>
            Bundle variable that can be set from command line
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Manifest.WixStdbaOverridableVariable.Name">
            <summary>
            Name of the variable
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.NInjectBinder">
            <summary>
            Inheritors should implement this to overload implementations.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.NInjectBinder.ba_">
            <summary>
            Gets the BA instance
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.NInjectBinder.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication)">
            <summary>
            NInject binder
            </summary>
            <param name="ba">BootstrapperApplication, must derive from JetBA. Will be bound as BootstrapperApplication</param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.NInjectBinder.Load">
            <summary>
            Loads bindings.
            <para>
            All bindings are required to be in singleton scope, with the exception of <see cref="T:PanelSW.Installer.JetBA.Util.EngineVariable"/> and <see cref="T:PanelSW.Installer.JetBA.Util.FileInUse"/>.
            The following classes are binded. Inheritors are encouraged to call this function, add and override select bindings.
            <list type="bullet">
            <item><see cref="T:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.BootstrapperApplication"/>, <see cref="T:PanelSW.Installer.JetBA.JetBootstrapperApplication"/> to constructor input as constant.</item>
            <item><see cref="T:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine"/></item>
            <item><see cref="T:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Command"/></item>
            <item><see cref="T:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Display"/></item>
            <item><see cref="T:PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData"/></item>
            <item><see cref="T:PanelSW.Installer.JetBA.Localization.Resources"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.ViewModel.FinishViewModel"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.ViewModel.PopupViewModel"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.ViewModel.UtilViewModel"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.Util.EngineVariable"/>.</item>
            <item><see cref="T:PanelSW.Installer.JetBA.Util.FileInUse"/>.</item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Abort">
            <summary>
              Looks up a localized string similar to Abort.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.CancelPrompt">
            <summary>
              Looks up a localized string similar to Are you sure you want to cancel [WixBundleName] installation?.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Continue">
            <summary>
              Looks up a localized string similar to Continue.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Downgrade">
            <summary>
              Looks up a localized string similar to Downgrade.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.DowngradePromptFormat">
            <summary>
              Looks up a localized string similar to A newer version of [WixBundleName] detected. Downgrading is not supported.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Exit">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.FilesInUse">
            <summary>
              Looks up a localized string similar to Files in use.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.FilesInUseText">
             <summary>
               Looks up a localized string similar to The following applications are using files that need to be updated by this setup. 
            Click &apos;Ignore&apos; to continue setup (reboot may be required). 
            Click &apos;Abort&apos; to abort setup. Click &apos;Shut down&apos; to close the applications..
             </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Ignore">
            <summary>
              Looks up a localized string similar to Ignore.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Information">
            <summary>
              Looks up a localized string similar to Information.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.No">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Note">
            <summary>
              Looks up a localized string similar to Note.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.OK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.OperationCanceled">
            <summary>
              Looks up a localized string similar to Operation Canceled.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.PreviousVersion">
            <summary>
              Looks up a localized string similar to Previous Version.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Retry">
            <summary>
              Looks up a localized string similar to Retry.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.ShellExecuteFailedCaption">
            <summary>
              Looks up a localized string similar to Failed Open.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.ShellExecuteFailedTextFormat">
            <summary>
              Looks up a localized string similar to Failed opening {0}.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.ShutDown">
            <summary>
              Looks up a localized string similar to Shut Down.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Warning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Properties.Resources.Yes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ResolveCultureEventArgs">
            <summary>
            Event args for reolving localization culture
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ResolveCultureEventArgs.CultureInfo">
            <summary>
            Localization culture
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.BaseConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.BaseConverter.ProvideValue(System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.DetectMsiPackageEventArgsEx">
            <summary>
            Extension methods for product detection
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.DetectMsiPackageEventArgsEx.GetComponentPath(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectRelatedMsiPackageEventArgs,System.String)">
            <summary>
            Get key path for a component in the detected MSI product.
            Requires BA payload Microsoft.Deployment.WindowsInstaller.dll
            </summary>
            <param name="args"></param>
            <param name="componentGuid"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.DetectMsiPackageEventArgsEx.GetComponentState(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectRelatedMsiPackageEventArgs,System.String)">
            <summary>
            Get component state for the detected MSI product.
            Requires BA payload Microsoft.Deployment.WindowsInstaller.dll
            </summary>
            <param name="args"></param>
            <param name="componentGuid"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.DetectMsiPackageEventArgsEx.GetProductInstallation(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectRelatedMsiPackageEventArgs)">
            <summary>
            Get component state for the detected MSI product.
            Requires BA payload Microsoft.Deployment.WindowsInstaller.dll
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.DetectMsiPackageEventArgsEx.GetComponentPath(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectTargetMsiPackageEventArgs,System.String)">
            <summary>
            Get key path for a component in the detected MSI product.
            Requires BA payload Microsoft.Deployment.WindowsInstaller.dll
            </summary>
            <param name="args"></param>
            <param name="componentGuid"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.DetectMsiPackageEventArgsEx.GetComponentState(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectTargetMsiPackageEventArgs,System.String)">
            <summary>
            Get component state for the detected MSI product.
            Requires BA payload Microsoft.Deployment.WindowsInstaller.dll
            </summary>
            <param name="args"></param>
            <param name="componentGuid"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.DetectMsiPackageEventArgsEx.GetProductInstallation(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectTargetMsiPackageEventArgs)">
            <summary>
            Get component state for the detected MSI product.
            Requires BA payload Microsoft.Deployment.WindowsInstaller.dll
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.FileInUse">
            <summary>
            Represents a FileInUse entry
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.FileInUse.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication,System.Int32,System.String)">
            <summary>
            Constructor. 
            </summary>
            <param name="ba"></param>
            <param name="procId"></param>
            <param name="name"></param>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.FileInUse.Name">
            <summary>
            Variable name
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.FileInUse.ProcessID">
            <summary>
            Process ID of an application that holds files in use
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.FileInUse.Image">
            <summary>
            Icon associated with the process
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.EngineVariable">
            <summary>
            Represents an Engine variable with value change notifications
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineVariable.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication,System.String)">
            <summary>
            Constructor. Called by <see cref="T:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel"/>
            </summary>
            <param name="ba"></param>
            <param name="name"></param>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.EngineVariable.Name">
            <summary>
            Variable name
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.EngineVariable.Exists">
            <summary>
            Test if the variable exists.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.EngineVariable.IsOnCommandLine">
            <summary>
            Get or set whether this variable was set from command line.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.EngineVariable.String">
            <summary>
            Get or set the variable's string value, formatted
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.EngineVariable.Numeric">
            <summary>
            Get or set the variable's numeric value
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.EngineVariable.Version">
            <summary>
            Get or set the variable's Version value
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.EngineVariable.Boolean">
            <summary>
            Treats the variable's numeric value as 1 or 0
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.EngineVariable.SecureString">
            <summary>
            Get or set the variable's SecureString value
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineVariable.OnPropertyChanged(System.String)">
            <summary>
            Notifies property change events on propertyName, String, Numeric, Boolean, Version and SecureString
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineVariable.op_Implicit(PanelSW.Installer.JetBA.Util.EngineVariable)~System.String">
            <summary>
            Implicit cast to string
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineVariable.op_Implicit(PanelSW.Installer.JetBA.Util.EngineVariable)~System.Boolean">
            <summary>
            Implicit cast to bool
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineVariable.op_Implicit(PanelSW.Installer.JetBA.Util.EngineVariable)~System.Nullable{System.Boolean}">
            <summary>
            Implicit cast to bool
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineVariable.op_Implicit(PanelSW.Installer.JetBA.Util.EngineVariable)~System.Version">
            <summary>
            Implicit cast to Version
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineVariable.op_Implicit(PanelSW.Installer.JetBA.Util.EngineVariable)~System.Security.SecureString">
            <summary>
            Implicit cast to SecureString
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineVariable.op_Implicit(PanelSW.Installer.JetBA.Util.EngineVariable)~System.Nullable{System.Int64}">
            <summary>
            Implicit cast to long
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineVariable.ToString">
            <summary>
            Return the variable's string value
            </summary>
            <returns></returns>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.EnumBooleanConverter">
            <summary>
            Compare an Enum value to converter parameter
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EnumBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Compare an Enum value to converter parameter
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>True iff parameter equals value</returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EnumBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.EnumToVisibilityConverter">
            <summary>
            Compares ConverterParameter to a semicolon separated list of values.
            If the parameter is in the list, return <see cref="F:System.Windows.Visibility.Visible"/>. Otherwise, return <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EnumToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert from enum value to <see cref="T:System.Windows.Visibility"/>
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EnumToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.InputValidationException">
            <summary>
            Represents an input validation failure with optional level and caption
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.InputValidationException.#ctor(System.String,System.String,PanelSW.Installer.JetBA.Util.InputValidationException.ErrorLevel)">
            <summary>
            C'tor
            </summary>
            <param name="message"></param>
            <param name="caption"></param>
            <param name="level"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.InputValidationException.#ctor(System.String,PanelSW.Installer.JetBA.Util.InputValidationException.ErrorLevel)">
            <summary>
            C'tor
            </summary>
            <param name="message"></param>
            <param name="level"></param>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.InputValidationException.Level">
            <summary>
            Level of the validation failure
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Util.InputValidationException.Caption">
            <summary>
            Failure caption
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.InputValidationException.ErrorLevel">
            <summary>
            Input validation error level
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.Util.InputValidationException.ErrorLevel.Info">
            <summary>
            Informative failure only
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.Util.InputValidationException.ErrorLevel.Warning">
            <summary>
            Informative failure, with warning icon
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.Util.InputValidationException.ErrorLevel.Error">
            <summary>
            Validation failure- installation will fail in silent mode; Page will not transit if full UI mode.
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.InverseBooleanConverter">
            <summary>
            Inverts a boolean value
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.InverseBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Inverts the boolean parameter
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.InverseBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Inverts the boolean parameter
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.EngineEx">
            <summary>
            <see cref="T:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine"/> extension methods
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineEx.ParseCommandLine(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine,Microsoft.Tools.WindowsInstallerXml.Bootstrapper.BootstrapperApplication,PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData,PanelSW.Installer.JetBA.ViewModel.VariablesViewModel)">
            <summary>
            Parse command line to set values for overidible variables
            </summary>
            <param name="eng"></param>
            <param name="bootstrapper"></param>
            <param name="manifest"></param>
            <param name="vars"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineEx.EvaluateConditions(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine,PanelSW.Installer.JetBA.Manifest.BootstrapperApplicationData)">
            <summary>
            Evaluate launch conditions in BootstrapperApplicationData.xml
            </summary>
            <param name="eng"></param>
            <param name="manifest"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineEx.BooleanVariable(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine,System.String)">
            <summary>
            Interprets a bundle numeric variable as boolean 0 or non-zero.
            </summary>
            <param name="eng">Extension method's this parameter</param>
            <param name="name">Variable name. Variable's value is expected to be numeric</param>
            <returns>False if the variable equals 0, True otherwise</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Variable doesn't exist or isn't numeric</exception>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineEx.BooleanVariable(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine,System.String,System.Boolean)">
            <summary>
            Set a numeric burn variable to 0 or 1.
            </summary>
            <param name="eng">Extension method's this parameter</param>
            <param name="name">Variable name. Variable's value is expected to be numeric</param>
            <param name="value">Value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Variable doesn't exist or isn't numeric</exception>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.EngineEx.Log(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine,Microsoft.Tools.WindowsInstallerXml.Bootstrapper.LogLevel,System.String,System.Object[])">
            <summary>
            Log a formatted message
            </summary>
            <param name="eng"></param>
            <param name="level">Logging level</param>
            <param name="format">Message format string</param>
            <param name="args">Message format arguments</param>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.NotifyPropertyChanged">
            <summary>
            Utility class to implement INotifyPropertyChanged
            </summary>
        </member>
        <member name="E:PanelSW.Installer.JetBA.Util.NotifyPropertyChanged.PropertyChanged">
            <summary>
            Raised when a property on this object has a new value.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.NotifyPropertyChanged.OnPropertyChanged(System.String)">
            <summary>
            Raises this object's PropertyChanged event.
            </summary>
            <param name="propertyName">The property that has a new value.</param>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Util.RelayCommand">
            <summary>
            A command whose sole purpose is to 
            relay its functionality to other
            objects by invoking delegates. The
            default return value for the CanExecute
            method is 'true'.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
            Creates a new command that can always execute.
            </summary>
            <param name="execute">The execution logic.</param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.RelayCommand.CanExecute(System.Object)">
            <summary>
            Executes canExecute predicate
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="E:PanelSW.Installer.JetBA.Util.RelayCommand.CanExecuteChanged">
            <summary>
            Event raised when CanExecute changed
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.Util.RelayCommand.Execute(System.Object)">
            <summary>
            Execute the command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:PanelSW.Installer.JetBA.Localization.Resources">
            <summary>
            Defines localizable strings in core implementation
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Yes">
            <summary>
            Yes
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Downgrade">
            <summary>
            Downgrade
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.DowngradePromptFormat">
            <summary>
            A newer version of [WixBundleName] detected. Downgrading is not supported
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Exit">
            <summary>
            Exit
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.OK">
            <summary>
            OK
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Cancel">
            <summary>
            Cancel?
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.CancelPrompt">
            <summary>
            Are you sure you want to cancel the configuration?
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.No">
            <summary>
            No
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.FilesInUse">
            <summary>
            Files in use
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.FilesInUseText">
            <summary>
            The following applications are using files that need to be updated by this setup. 
            Click 'Ignore' to continue setup (reboot may be required).
            Click 'Abort' to abort setup. Click 'Shut down' to close the applications.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Ignore">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Abort">
            <summary>
            Abort
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Retry">
            <summary>
            Retry
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Continue">
            <summary>
            Continue
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.ShutDown">
            <summary>
            Shut Down
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.ShellExecuteFailedCaption">
            <summary>
            Failed Open
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.ShellExecuteFailedTextFormat">
            <summary>
            Failed opening {0}
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.OperationCanceled">
            <summary>
            Operation Canceled
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Information">
            <summary>
            Information
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.PreviousVersion">
            <summary>
            Previous Version
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.ErrorIcon">
            <summary>
            Error icon
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.WarningIcon">
            <summary>
            Warning icon
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.InformationIcon">
            <summary>
            Information icon
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.QuestionIcon">
            <summary>
            Question icon
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.Localization.Resources.UserIcon">
            <summary>
            User icon
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel">
            <summary>
            NavigationViewModel exposes the current view and forward and backward navigation.
            <para>
            Setting <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.Page"/> raises PropertyChanged events on Page and <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.CurrentPage"/>.
            Code can change the value of <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.Page"/> regardless of <see cref="T:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Display"/> level, as views will only be loaded if an active binding is made to <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.CurrentPage"/>
            </para>
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication)">
            <summary>
            C'tor, called by NInject binder.
            </summary>
            <param name="ba"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.AddPage(System.Object,System.Lazy{System.Object})">
            <summary>
            Add a mapping from a page ID to a page.
            </summary>
            <param name="pageId">Page ID. Usually, an enumeration value</param>
            <param name="view">Lazy view loader. The view will only be instantiated if an active binding is made to <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.CurrentPage"/></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.GetPage(System.Object)">
            <summary>
            Retrieve a page lazy constructor by ID.
            </summary>
            <param name="pageId">Page ID. Usually, an enumeration value</param>
            <returns></returns>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.Page">
            <summary>
            Gets or sets the current page ID
            <para>
            Separating page ID from it's view enables setting pages while ignoring <see cref="T:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Display"/> level.
            Setting page ID raises PropertyChanged events for both Page and <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.CurrentPage"/>.
            If display level is none, no listener will hook to CurrentPage thus no view will be created
            </para>
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.CurrentPage">
            <summary>
            Gets the current <see cref="T:System.Object"/> mapped to <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.Page"/>. 
            The page will be constructed on first access
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.StopCommand">
            <summary>
            Prompt the user to cancel the configuration.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.NextCommand">
            <summary>
            Move from current page to next page.
            Call <see cref="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.ValidatePage(System.Object)"/> with <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.Page"/> parameter.
            If an exception is thrown, a popup-message will be displayed with 'OK' button and page will not move next.
            Then, call <see cref="M:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.QueryNextPage(System.Object)"/> to get the next page ID.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.GoingNextStatus">
            <summary>
            "Next" navigation task status.
            For time consuming validation tasks, this can be bound to present a progress indication.
            Status is <see cref="F:System.Threading.Tasks.TaskStatus.Running"/> during page validation.
            Status is <see cref="F:System.Threading.Tasks.TaskStatus.WaitingForChildrenToComplete"/> during prompts related to page validation.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.ValidatePage">
            <summary>
            Validate current page inputs. Logs and prompts on validation exceptions.
            Use <see cref="T:PanelSW.Installer.JetBA.Util.InputValidationException"/> for maximal flexibility in message look and behaviour.
            </summary>
            <returns>True iff validation passed without an exception</returns>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.BackCommand">
            <summary>
            Move from current page backwards.
            By default, move back to previous page in history.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.QueryNextPage(System.Object)">
            <summary>
            Inheritors implement this function to determine next page.
            <para>
            Called by NextCommand, this function returns the next page to navigate to. It doesn't perform the actual navigation
            </para>
            </summary>
            <returns><see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.Page"/> ID of next page</returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.ClearHistory">
            <summary>
            Clears history page stack.
            The stack is only used in this implementation of <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.BackCommand"/>.
            Inheritors that override <see cref="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.BackCommand"/> should not use this function.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.NavigationViewModel.CanGoBack">
            <summary>
            Whether or not going back is available.
            By default, whether the history queue is empty or not.
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel">
            <summary>
            Perform input validations on page transitions.
            For silent and passive operations, perform on all inputs at one go.
            The default implementation doesn't perform any validation.
            <para>
            Override 'ValidatePage' to validate a single page's inputs.
            Override 'ValidateAll' to validate all inputs in silent and passive operations.
            </para>
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication)">
            <summary>
            Utility view model
            </summary>
            <param name="ba"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.ValidatePage(System.Object)">
            <summary>
            Validate page inputs before going 'Next' from a page.
            Inheritors use <see cref="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.AddResult(System.Exception)"/> to accumulate validation results or throw an exception.
            </summary>
            <param name="pageId">Page key</param>
            <exception cref="T:PanelSW.Installer.JetBA.Util.InputValidationException"/>
            <exception cref="T:System.ArgumentException">
            Validation failure message.
            <see cref="P:System.ArgumentException.ParamName"/> will be used for pop-up message caption line.
            <see cref="P:System.ArgumentException.Message"/> will be used for pop-up message text.
            </exception>
            <exception cref="T:System.Exception"/>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.ValidateAll">
            <summary>
            Validate all inputs in one go.
            Inheritors use <see cref="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.AddResult(System.Exception)"/> to accumulate validation results or throw an exception.
            Called on silent and passive operations only on <see cref="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectCompleteEventArgs)"/> 
            </summary>
            <exception cref="T:PanelSW.Installer.JetBA.Util.InputValidationException"/>
            <exception cref="T:System.ArgumentException">
            Validation failure message.
            <see cref="P:System.ArgumentException.ParamName"/> will be used for pop-up message caption line.
            <see cref="P:System.ArgumentException.Message"/> will be used for pop-up message text.
            </exception>
            <exception cref="T:System.Exception"/>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.ValidatePreConditions">
            <summary>
            Validate pre-conditions. Called on DetectComplete.
            Inheritors use <see cref="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.AddResult(System.Exception)"/> to accumulate validation results or throw an exception.
            Note that, this method is not called if the bundle <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.DetectState"/> is <see cref="F:PanelSW.Installer.JetBA.DetectionState.Present"/>.
            </summary>
            <exception cref="T:PanelSW.Installer.JetBA.Util.InputValidationException"/>
            <exception cref="T:System.Exception">
            Validation failure message.
            </exception>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.ClearResults">
            <summary>
            Clear accumulated validation errors
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.AddResult(System.Exception)">
            <summary>
            Add an exception to the result list
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.PromptResults(System.Boolean)">
            <summary>
            Prompt validation results and clears them.
            </summary>
            <param name="doExit">True to abort after the first prompt</param>
            <returns>true if no errors were detected. That is, if no exceptions were collected, or if only <see cref="T:PanelSW.Installer.JetBA.Util.InputValidationException"/> instances with warning or info level were.</returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.InputValidationsViewModel.PromptResults(System.Windows.Input.ICommand,System.Windows.Input.ICommand)">
            <summary>
            Prompt validation results and clears them.
            Executes an error or success command. The command will be executed only once even if multiple results were collected.
            </summary>
            <param name="successCommand">Command to execute if no error was encountered</param>
            <param name="errorCommand">Command to execute if any error was encountered</param>
            <returns></returns>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.UtilViewModel">
            <summary>
            Utility view model, host to miscellaneous utility commands.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.UtilViewModel.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication)">
            <summary>
            Utility view model
            </summary>
            <param name="ba"></param>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.UtilViewModel.ShellExecuteCommand">
            <summary>
            Execute a shell command with 'open' verb.
            On error, pop up a message
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel">
            <summary>
            Exposes burn variables to XAML binding without needing to define a model property.
            </summary>
            <example>
            <!-- XAML Binding -->
            <![CDATA[<TextBox Text="{Binding VariablesViewModel.InstallFolder.String}" />]]>
            </example>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication)">
            <summary>
            C'tor- called by NInject
            </summary>
            <param name="ba"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel.EncryptOne(System.String)">
            <summary>
            Encrypt a single value.
            Default implementation uses <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)"/>.
            </summary>
            <param name="plain"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel.DecryptOne(System.String)">
            <summary>
            Decrypt a single value.
            Default implementation uses <see cref="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)"/>.
            </summary>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel.DecryptAll(System.String)">
            <summary>
            Decrypt variable in that were encrypted using bundle variable @jet:Encrypted attribute.
            Useful to decrypt variables of a previous version persisted 'JetBA_Encrypted_Variables' variable.
            </summary>
            <param name="jetEncryptedVariables"></param>
            <returns></returns>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel.BA">
            <summary>
            <see cref="T:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.BootstrapperApplication"/>
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Attempt to find a burn variable and return it as <see cref="T:PanelSW.Installer.JetBA.Util.EngineVariable"/>
            <para>
            If the variable is not defined in the bundle, the function will fail and the result will be set to null.
            </para>
            </summary>
            <param name="binder"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Always return false
            </summary>
            <param name="binder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.VariablesViewModel.Item(System.String)">
            <summary>
            Get vraiable by name
            </summary>
            <param name="varName"></param>
            <returns></returns>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.FinishViewModel">
            <summary>
            Handle reboots
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.FinishViewModel.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication)">
            <summary>
            C'tor, called by NInject
            </summary>
            <param name="ba"></param>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.FinishViewModel.RebootCommand">
            <summary>
            Set <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.RebootState"/> to <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ApplyRestart.RestartInitiated"/>.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.FinishViewModel.RebootEnabled">
            <summary>
            True iff <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.RebootState"/> is <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ApplyRestart.RestartRequired"/>.
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.PopupViewModel">
            <summary>
            Binding target for pop up messages
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Buttons">
            <summary>
            Clicked button, returned by <see cref="M:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.ShowSync(System.String,System.String,PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint,System.String,System.String,System.String)"/>
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Buttons.None">
            <summary>
            No button was clicked. Never happens
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Buttons.Left">
            <summary>
            Left button was clicked
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Buttons.Middle">
            <summary>
            Middle button was clicked
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Buttons.Right">
            <summary>
            Right button was clicked
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags">
            <summary>
            UI Hint flags passed from engine
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_ABORTRETRYIGNORE">
            <summary>
            The message box contains three push buttons: Abort, Retry, and Ignore.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_CANCELTRYCONTINUE">
            <summary>
            The message box contains three push buttons: Cancel, Try Again, Continue. Use this message box type instead of MB_ABORTRETRYIGNORE.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_HELP">
            <summary>
            Adds a Help button to the message box. When the user clicks the Help button or presses F1, the system sends a WM_HELP message to the owner.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_OK">
            <summary>
            The message box contains one push button: OK. This is the default.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_OKCANCEL">
            <summary>
            The message box contains two push buttons: OK and Cancel.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_RETRYCANCEL">
            <summary>
            The message box contains two push buttons: Retry and Cancel.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_YESNO">
            <summary>
            The message box contains two push buttons: Yes and No.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_YESNOCANCEL">
            <summary>
            The message box contains three push buttons: Yes, No, and Cancel.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_BUTTONSMASK">
            <summary>
            Mask for buttons hint, except MB_HELP
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_ICONWARNING">
            <summary>
            An exclamation-point icon appears in the message box.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_ICONINFORMATION">
            <summary>
            An icon consisting of a lowercase letter i in a circle appears in the message box.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_ICONQUESTION">
            <summary>
            A question-mark icon appears in the message box. The question-mark message icon is no longer recommended because it does not clearly represent a specific type of message and because the phrasing of a message as a question could apply to any message type. In addition, users can confuse the message symbol question mark with Help information. Therefore, do not use this question mark message symbol in your message boxes. The system continues to support its inclusion only for backward compatibility.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_ICONERROR">
            <summary>
            A stop-sign icon appears in the message box.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_USERICON">
            <summary>
            User icon
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_ICONMASK">
            <summary>
            Mask for icons hint
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_DEFBUTTON1">
            <summary>
            Default button is #1
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_DEFBUTTON2">
            <summary>
            Default button is #2
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_DEFBUTTON3">
            <summary>
            Default button is #3
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_DEFBUTTON4">
            <summary>
            Default button is #4
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags.MB_DEFBUTTONMASK">
            <summary>
            Mask for default buttons
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint">
            <summary>
            Enum to use for image binding by hint
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint.Unknown">
            <summary>
            Unknown message hint
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint.Information">
            <summary>
            Informative message
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint.User">
            <summary>
            User informative message
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint.Question">
            <summary>
            Informative question requiring user decision
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication)">
            <summary>
            C'tor
            </summary>
            <param name="ba"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Show(System.String,System.String,PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint,System.String,System.Windows.Input.ICommand,System.String,System.Windows.Input.ICommand,System.String,System.Windows.Input.ICommand)">
            <summary>
            Asynchronic popup message.
            </summary>
            <param name="caption">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Caption"/> property</param>
            <param name="text">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Caption"/> property</param>
            <param name="rightCommandText">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.RightCommandText"/> property</param>
            <param name="rightCommand">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.RightCommand"/> property</param>
            <param name="middleCommandText">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.MiddleCommandText"/> property</param>
            <param name="middleCommand">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.MiddleCommand"/> property</param>
            <param name="leftCommandText">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.LeftCommandText"/> property</param>
            <param name="leftCommand">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.LeftCommand"/> property</param>
            <param name="hint">Hint for use with icon binding</param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.ShowSync(System.String,System.String,PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint,System.String,System.String,System.String)">
            <summary>
            Synchronic popup message
            </summary>
            <param name="caption">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Caption"/> property</param>
            <param name="text">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Caption"/> property</param>
            <param name="rightCommandText">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.RightCommandText"/> property</param>
            <param name="middleCommandText">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.MiddleCommandText"/> property</param>
            <param name="leftCommandText">Value for bindable <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.LeftCommandText"/> property</param>
            <param name="hint">Hint for use with icon binding</param>
            <returns>The clicked button</returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.ShowSync(PanelSW.Installer.JetBA.ViewModel.PopupViewModel.UIHintFlags,System.String,System.String)">
            <summary>
            Show a synchornic message with hints for caption and buttons
            </summary>
            <param name="flags"></param>
            <param name="message"></param>
            <param name="caption"></param>
            <returns>Result as indicated by button hints</returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.ShowFilesInUse(System.Collections.ObjectModel.ObservableCollection{PanelSW.Installer.JetBA.Util.FileInUse})">
            <summary>
            Synchronic popup message cusrtomized for File-In-Use message.
            </summary>
            <param name="filesInUse">Value for <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.FilesInUse"/> property</param>
            <returns>The clicked button</returns>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IsOpen">
            <summary>
            True iff popup should show
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Caption">
            <summary>
            Message caption
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Text">
            <summary>
            Message text
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.FilesInUse">
            <summary>
            For Files-in-use message, holds the collection of files in use.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.RightCommand">
            <summary>
            In asynchronic <see cref="M:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Show(System.String,System.String,PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint,System.String,System.Windows.Input.ICommand,System.String,System.Windows.Input.ICommand,System.String,System.Windows.Input.ICommand)"/>, command to execute when the user clicks the right button
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.RightCommandText">
            <summary>
            Text to show on the right button
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.RightCommandVisibility">
            <summary>
            Right button visibility. By default, <see cref="F:System.Windows.Visibility.Visible"/> iff <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.RightCommandText"/> is not null or empty.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.MiddleCommand">
            <summary>
            In asynchronic <see cref="M:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Show(System.String,System.String,PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint,System.String,System.Windows.Input.ICommand,System.String,System.Windows.Input.ICommand,System.String,System.Windows.Input.ICommand)"/>, command to execute when the user clicks the middle button
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.MiddleCommandText">
            <summary>
            Text to show on the middle button
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.MiddleCommandVisibility">
            <summary>
            Middle button visibility. By default, <see cref="F:System.Windows.Visibility.Visible"/> iff <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.MiddleCommandText"/> is not null or empty.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.LeftCommand">
            <summary>
            In asynchronic <see cref="M:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Show(System.String,System.String,PanelSW.Installer.JetBA.ViewModel.PopupViewModel.IconHint,System.String,System.Windows.Input.ICommand,System.String,System.Windows.Input.ICommand,System.String,System.Windows.Input.ICommand)"/>, command to execute when the user clicks the left button
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.LeftCommandText">
            <summary>
            Text to show on the left button
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.LeftCommandVisibility">
            <summary>
            Left button visibility. By default, <see cref="F:System.Windows.Visibility.Visible"/> iff <see cref="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.LeftCommandText"/> is not null or empty.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.PopupViewModel.Icon">
            <summary>
            Indication as to message type
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel">
            <summary>
            Planning commands
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication)">
            <summary>
            C'tor, called by NInject
            </summary>
            <param name="ba"></param>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.RepairCommand">
            <summary>
            Plan <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.LaunchAction.Repair"/>
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.ModifyCommand">
            <summary>
            Plan <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.LaunchAction.Modify"/>
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.UninstallCommand">
            <summary>
            Plan <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.LaunchAction.Uninstall"/>
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.InstallCommand">
            <summary>
            Plan <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.LaunchAction.Install"/>
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.ApplyCommand">
            <summary>
            Start apply. Usually called when using one of the commands, unless <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.PlanCommand"/> was used.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.Apply">
            <summary>
            Start apply. Usually called when using one of the commands, unless <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.PlanCommand"/> was used.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.PlanCommand">
            <summary>
            Launch plan-only action. 
            Developer should execute ApplyCommand later to apply the plan.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.ApplyAfterPlan">
            <summary>
            Initiate apply after plan has successfully complete.
            Set when executing InstallCommand, UninstallCommand, RepairCommand, or ModifyCommand.
            Cleared when executing PlanCommand.
            By default, when starting Plan without any of the commands, this is true.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.PlanAfterReboot">
            <summary>
            Automatically initiate Plan after automatic reboot.
            If false, your BA will be responsible to trigger <see cref="M:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine.Plan(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.LaunchAction)"/>.
            By default, this is false.
            <para>
            When a package execution result resolves to force reboot, the BA automatically initiates the reboot.
            After reboot, the installer will launch automatically. This flag governs whether or not JetBA will commence with the plan immediately after a forced reboot.
            </para>
            </summary>	
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.Result">
            <summary>
            Final result to be returned by the BA.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.PlannedAction">
            <summary>
            Get or set the plan action
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.Canceled">
            <summary>
            True if operation has been canceled during plan or apply phase
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.DetectState">
            <summary>
            Gets and sets the detect state of the view's model.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.InstallState">
            <summary>
            Gets and sets the installation state of the view's model.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.RebootState">
            <summary>
            Get or set the reboot state
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.ErrorMessage">
            <summary>
            Get or set error message
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.SupportDowngrade">
            <summary>
            Whether or not downgrades are allowed.
            Defaults to false.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.SupportMultiInstance">
            <summary>
            Whether or not multi-instances are allowed (same version).
            Defaults to false.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.FailingPackageLogFile">
            <summary>
            Get the log file path of the first package that failed
            Unless the failure is user cancellation.
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel">
            <summary>
            Bindable progress indication properties
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication,System.Lazy{PanelSW.Installer.JetBA.ViewModel.ApplyViewModel},System.Lazy{PanelSW.Installer.JetBA.ViewModel.PopupViewModel},System.Lazy{PanelSW.Installer.JetBA.Localization.Resources})">
            <summary>
            C'tor, called by NInject
            </summary>
            <param name="ba"></param>
            <param name="applyViewModel"></param>
            <param name="popupViewModel"></param>
            <param name="localization"></param>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.CacheProgressState">
            <summary>
            Cache progress state
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.CacheProgress">
            <summary>
            Package caching progress
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.CachePackage">
            <summary>
            Package currently being cached
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.ExecuteProgressState">
            <summary>
            Indicates execute progress state
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.ExecuteProgress">
            <summary>
            Indicates execute progress
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.Message">
            <summary>
            Windows Installer action message
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.Progress">
            <summary>
            Overall progress- cache and apply
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.ProgressState">
            <summary>
            Overall progress state
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ProgressViewModel.Package">
            <summary>
            Current Execute package
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ViewModel.ViewModelBase">
            <summary>
            Base class for all ViewModel classes in the application.
            It provides support for property change notifications 
            and has a DisplayName property.  This class is abstract.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.ViewModelBase.#ctor(PanelSW.Installer.JetBA.JetBootstrapperApplication)">
            <summary>
            C'tor
            </summary>
            <param name="ba"></param>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ViewModelBase.BA">
            <summary>
            Get the BA
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.ViewModelBase.VerifyPropertyName(System.String)">
            <summary>
            Warns the developer if this object does not have
            a public property with the specified name. This 
            method does not exist in a Release build.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.ViewModel.ViewModelBase.ThrowOnInvalidPropertyName">
            <summary>
            Returns whether an exception is thrown, or if a Debug.Fail() is used
            when an invalid property name is passed to the VerifyPropertyName method.
            The default value is false, but subclasses used by unit tests might 
            override this property's getter to return true.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.ViewModel.ViewModelBase.OnPropertyChanged(System.String)">
            <summary>
            Raises this object's PropertyChanged event.
            </summary>
            <param name="propertyName">The property that has a new value.</param>
        </member>
        <member name="T:PanelSW.Installer.JetBA.DetectionState">
            <summary>
            The states of detection.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.DetectionState.Absent">
            <summary>
            Not installed
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.DetectionState.Present">
            <summary>
            Installed
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.DetectionState.Newer">
            <summary>
            Newer version is installed
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.DetectionState.SameVersion">
            <summary>
            Bundle with same version but different Id is installed
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.DetectionState.Older">
            <summary>
            Older version is installed
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.InstallationState">
            <summary>
            The states of installation.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.InstallationState.Detecting">
            <summary>
            Detect has begun
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.InstallationState.Detected">
            <summary>
            Detect complete
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.InstallationState.Planning">
            <summary>
            Planning has begun
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.InstallationState.Planned">
            <summary>
            Planning complete
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.InstallationState.Applying">
            <summary>
            Apply has begun
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.InstallationState.Applied">
            <summary>
            Apply complete successfully
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.InstallationState.Failed">
            <summary>
            Apply failed
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.ErrorCodes">
            <summary>
            The errors returned from the engine
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ErrorCodes.UserCancelled">
            <summary>
            Operation canceled by the user.
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ErrorCodes.RestartRequired">
            <summary>
            System reboot is required (ERROR_SUCCESS_REBOOT_REQUIRED)
            </summary>
        </member>
        <member name="F:PanelSW.Installer.JetBA.ErrorCodes.ERROR_FAIL_NOACTION_REBOOT">
            <summary>
            No action was taken as a system reboot is required.
            </summary>
        </member>
        <member name="T:PanelSW.Installer.JetBA.JetBootstrapperApplication">
            <summary>
            BootstrapperApplication implementation.
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.JetBootstrapperApplication.Kernel">
            <summary>
            NInject kernel instance
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.JetBootstrapperApplication.Binder">
            <summary>
            Inheritors should override <see cref="T:PanelSW.Installer.JetBA.NInjectBinder"/> if they plan to extend or add any view models or model.
            This property returns the <see cref="T:PanelSW.Installer.JetBA.NInjectBinder"/> instance.
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.Inject">
            <summary>
            Initialize <see cref="T:Ninject.StandardKernel"/> and call <see cref="M:Ninject.KernelBase.Inject(System.Object,Ninject.Parameters.IParameter[])"/>
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.JetBootstrapperApplication.Dispatcher">
            <summary>
            Get the user interface dispatcher
            </summary>
        </member>
        <member name="P:PanelSW.Installer.JetBA.JetBootstrapperApplication.View">
            <summary>
            Gets the BA Window. By default, only initialized if <see cref="P:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Command.Display"/> is equal to or greater than <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Display.Passive"/>
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.PlanLayout">
            <summary>
            Plan layout operation
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnResolveCulture(PanelSW.Installer.JetBA.ResolveCultureEventArgs)">
            <summary>
            Raise ResolveCulture event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="E:PanelSW.Installer.JetBA.JetBootstrapperApplication.ResolveCulture">
            <summary>
            Event fired when resolving localization culture, before starting detection phase.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.Run">
            <summary>
            UI thread entry point
            </summary>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectBeginEventArgs)">
            <summary>
            Set <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.DetectState"/> to <see cref="F:PanelSW.Installer.JetBA.DetectionState.Absent"/> or <see cref="F:PanelSW.Installer.JetBA.DetectionState.Present"/>
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectRelatedBundle(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectRelatedBundleEventArgs)">
            <summary>
            If detected another version of this bundle, set <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.DetectState"/> to <see cref="F:PanelSW.Installer.JetBA.DetectionState.Newer"/>, <see cref="F:PanelSW.Installer.JetBA.DetectionState.Older"/>, or <see cref="F:PanelSW.Installer.JetBA.DetectionState.SameVersion"/>
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnPlanRelatedBundle(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.PlanRelatedBundleEventArgs)">
            <summary>
            If installing another build of the same version, set to remove the other one.
            This behavior can be changed by hooking to <see cref="E:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.BootstrapperApplication.PlanRelatedBundle"/> or by setting <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.SupportMultiInstance"/> to true.
            <para>
            If plan is to execute on the related bundle, fail if it requires reboot.
            </para>
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectCompleteEventArgs)">
            <summary>
            Parse command line variables.
            Evaluate launch conditions.
            On passive mode- start Plan.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnPlanPackageBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.PlanPackageBeginEventArgs)">
            <summary>
            Skip installing MbaNetfxPackageId package. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnPlanComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.PlanCompleteEventArgs)">
            <summary>
            In passive/silent UI, begin apply.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnApplyBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ApplyBeginEventArgs)">
            <summary>
            Called when the engine has begun installing the bundle.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnExecuteFilesInUse(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ExecuteFilesInUseEventArgs)">
            <summary>
            Default to shut down applications that hold files in use.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnExecutePackageComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ExecutePackageCompleteEventArgs)">
            <summary>
            Initiate reboot if package exit code was parsed as 'forceReboot'
            To programmatically force reboot, set <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.RebootState"/> to <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ApplyRestart.RestartInitiated"/> and e.Result to <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Result.Restart"/>.
            In the case that inheritors or event listeners set the Result to any value other than <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Result.None"/>, that result takes precedence.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnApplyComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ApplyCompleteEventArgs)">
            <summary>
            Set <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.InstallState"/> to <see cref="F:PanelSW.Installer.JetBA.InstallationState.Applied"/>  or <see cref="F:PanelSW.Installer.JetBA.InstallationState.Failed"/>.
            Set <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.RebootState"/>.
            Initiate reboot on force reboot state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnShutdown(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ShutdownEventArgs)">
            <summary>
            Invoke reboot if <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.RebootState"/> is <see cref="F:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ApplyRestart.RestartInitiated"/> and command did not disable reboots.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnResolveSource(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ResolveSourceEventArgs)">
            <summary>
            Download file if it is not locally available.
            If <see cref="P:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ResolveSourceEventArgs.DownloadSource"/> contains both '[' and ']', 
            use <see cref="M:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine.FormatString(System.String)"/> and set by <see cref="M:Microsoft.Tools.WindowsInstallerXml.Bootstrapper.Engine.SetDownloadSource(System.String,System.String,System.String,System.String,System.String)"/>.
            This allows using burn variables in DownloadUrl, like 'http://www.mysite.com/Files/[WixBundleVersion]/{2}'
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnError(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ErrorEventArgs)">
            <summary>
            Prompt error. Save error message to <see cref="P:PanelSW.Installer.JetBA.ViewModel.ApplyViewModel.ErrorMessage"/>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectMsiFeature(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectMsiFeatureEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnPlanMsiFeature(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.PlanMsiFeatureEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectPackageComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectPackageCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnPlanPackageComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.PlanPackageCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnApplyPhaseCount(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ApplyPhaseCountArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnCacheAcquireBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.CacheAcquireBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnCacheAcquireComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.CacheAcquireCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnCacheAcquireProgress(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.CacheAcquireProgressEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnCacheBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.CacheBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnCacheComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.CacheCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnCachePackageBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.CachePackageBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnCachePackageComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.CachePackageCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnCacheVerifyBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.CacheVerifyBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnCacheVerifyComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.CacheVerifyCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectCompatiblePackage(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectCompatiblePackageEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectForwardCompatibleBundle(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectForwardCompatibleBundleEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectPackageBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectPackageBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectPriorBundle(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectPriorBundleEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectRelatedMsiPackage(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectRelatedMsiPackageEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectTargetMsiPackage(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectTargetMsiPackageEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectUpdate(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectUpdateEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectUpdateBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectUpdateBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnDetectUpdateComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.DetectUpdateCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnElevate(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ElevateEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnExecuteBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ExecuteBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnExecuteComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ExecuteCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnExecuteMsiMessage(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ExecuteMsiMessageEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnExecutePackageBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ExecutePackageBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnExecutePatchTarget(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ExecutePatchTargetEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnExecuteProgress(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ExecuteProgressEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnLaunchApprovedExeBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.LaunchApprovedExeBeginArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnLaunchApprovedExeComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.LaunchApprovedExeCompleteArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnPlanBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.PlanBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnPlanCompatiblePackage(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.PlanCompatiblePackageEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnPlanTargetMsiPackage(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.PlanTargetMsiPackageEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnProgress(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.ProgressEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnRegisterBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.RegisterBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnRegisterComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.RegisterCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnRestartRequired(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.RestartRequiredEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnStartup(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.StartupEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnSystemShutdown(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.SystemShutdownEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnUnregisterBegin(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.UnregisterBeginEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PanelSW.Installer.JetBA.JetBootstrapperApplication.OnUnregisterComplete(Microsoft.Tools.WindowsInstallerXml.Bootstrapper.UnregisterCompleteEventArgs)">
            <summary>
            Log and fail on uncaught exception in event hook
            </summary>
            <param name="args"></param>
        </member>
    </members>
</doc>
